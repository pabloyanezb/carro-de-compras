{"version":3,"sources":["components/FichaProducto.js","components/Producto.js","components/Carro.js","components/Navegacion.js","App.js","serviceWorker.js","index.js"],"names":["FichaProducto","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","listaCarrito","stock","parseInt","disabled","text","toggle","bind","assertThisInitialized","agregarCarrito","console","log","setState","prevState","_this2","push","titulo","precio","document","getElementById","innerText","length","react_default","a","createElement","Container","Button","onClick","color","Modal","isOpen","className","ModalHeader","ModalBody","CardImg","src","imagen","descripcion","id","ModalFooter","React","Component","Producto","Col","sm","Card","body","outline","CardBody","CardTitle","CardSubtitle","CardText","src_components_FichaProducto","Carro","popoverOpen","total","reduce","sum","i","Intl","NumberFormat","format","arregloCarrito","map","key","Badge","Popover","target","placement","PopoverHeader","PopoverBody","Table","Navegacion","Navbar","light","expand","NavbarBrand","href","Nav","navbar","NavItem","src_components_Carro","App","listaProductos","arregloComponentes","src_components_Producto","components_Navegacion","Row","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ee0e481.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Modal, Container, Button, ModalHeader, ModalBody, ModalFooter, CardImg} from 'reactstrap';\r\nimport './FichaProducto.css';\r\nimport {listaCarrito} from '../listaCarrito.json';\r\n\r\nclass FichaProducto extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      modal: false,\r\n      listaCarrito,\r\n      stock: parseInt(props.props.stock),\r\n      disabled: false,\r\n      text: \"Agregar al carrito\"\r\n    }\r\n    this.toggle = this.toggle.bind(this);\r\n    this.agregarCarrito = this.agregarCarrito.bind(this);\r\n    \r\n    console.log(props.props);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  agregarCarrito() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n    if (this.state.stock !== 0) {\r\n      this.setState(prevState => ({\r\n        stock: prevState.stock - 1,\r\n      }), () => {\r\n        console.log(this.state.stock)\r\n        if (this.state.stock === 0) {\r\n          this.setState(() => ({\r\n            disabled: true,\r\n            text: \"Sin stock :(\"\r\n          }));\r\n        }\r\n      });\r\n      listaCarrito.push({\r\n        \"titulo\": this.props.props.titulo,\r\n        \"precio\": this.props.props.precio\r\n      });\r\n\r\n      const cantidadProductos = document.getElementById(\"cantidadProductos\");\r\n      cantidadProductos.innerText = listaCarrito.length;\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Container>\r\n        <Button onClick={this.toggle} color=\"outline-success\">Ver Ficha</Button>\r\n        <Modal isOpen={this.state.modal} className=\"modal-sm\">\r\n          <ModalHeader>\r\n            {this.props.props.titulo}\r\n          </ModalHeader>\r\n          <ModalBody className=\"pb-0\">\r\n            <CardImg src={this.props.props.imagen}/>\r\n            {this.props.props.descripcion}\r\n            <p id=\"precio\"><b>${this.props.props.precio}</b></p>\r\n            <p>Hay <b>{this.state.stock}</b> unidades en stock</p>\r\n          </ModalBody>\r\n          <ModalFooter className=\"modalFooter\">\r\n            <Button color=\"success\" onClick={this.agregarCarrito} disabled={this.state.disabled}> {this.state.text} </Button>\r\n            <Button color=\"secondary\" onClick={this.toggle}>Volver atr√°s</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default FichaProducto;","import React from 'react';\r\nimport {Card, Col, CardImg, CardBody, CardTitle, CardSubtitle, CardText} from 'reactstrap';\r\nimport './Producto.css'\r\nimport FichaProducto from './FichaProducto';\r\n\r\nclass Producto extends React.Component {\r\n  render(){\r\n    return(\r\n      <Col sm=\"4\" className=\"d-flex align-items-stretch\">\r\n        <Card className=\"Card mb-3 text-center\" body outline color=\"dark\">\r\n          <CardImg src={this.props.imagen}/>\r\n          <CardBody>\r\n            <CardTitle>\r\n              <b>{this.props.titulo}</b>\r\n            </CardTitle>\r\n            <CardSubtitle>\r\n              <b>Valor: </b> ${this.props.precio}\r\n            </CardSubtitle>\r\n            <CardText>\r\n              {this.props.descripcion}\r\n            </CardText>\r\n            {/* <Button className=\"Button\">Comprar</Button> */}\r\n          </CardBody>\r\n          <FichaProducto props={this.props}/>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Producto;","import React from 'react';\r\nimport {Popover, PopoverHeader, PopoverBody, Table, Badge, Button} from 'reactstrap';\r\nimport './Carro.css'\r\nimport {listaCarrito} from '../listaCarrito.json';\r\n\r\nclass Carro extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      popoverOpen: false,\r\n      listaCarrito,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      popoverOpen: !prevState.popoverOpen\r\n    }));\r\n  }\r\n\r\n  total() {\r\n    let total = this.state.listaCarrito.reduce(function(sum, i) {\r\n      return sum + parseInt(i.precio*1000);\r\n    },0);\r\n    return Intl.NumberFormat(\"de-DE\").format(total);\r\n  }\r\n\r\n  render() {\r\n    const arregloCarrito = this.state.listaCarrito.map(\r\n      (listaCarrito, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td>{(i += 1)}</td>\r\n            <td>{listaCarrito.titulo}</td>\r\n            <td>${listaCarrito.precio}</td>\r\n          </tr>\r\n        )\r\n      }\r\n    )\r\n    return (\r\n      <div>\r\n        <Button id=\"Popover1\" color=\"secondary\">\r\n          <span className=\"material-icons\">\r\n            shopping_cart\r\n          </span>\r\n          <Badge color=\"success\" id=\"cantidadProductos\">\r\n            {listaCarrito.length}\r\n          </Badge>\r\n        </Button>\r\n        <Popover id=\"popover\" target=\"Popover1\" placement=\"bottom\" isOpen={this.state.popoverOpen} toggle={this.toggle}>\r\n          <PopoverHeader>Lista de compras</PopoverHeader>\r\n          <PopoverBody>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Producto</th>\r\n                  <th>Precio</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {arregloCarrito}\r\n              </tbody>\r\n              <tfoot>\r\n                <tr>\r\n                  <th>Total:</th>\r\n                  <td></td>\r\n                  <td>${this.total()} CLP</td>\r\n                </tr>\r\n              </tfoot>\r\n            </Table>\r\n          </PopoverBody>\r\n        </Popover>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Carro;\r\n","import React from 'react';\r\nimport {Navbar, NavItem, Nav, NavbarBrand} from 'reactstrap';\r\nimport Carro from './Carro';\r\n\r\nclass Navegacion extends React.Component {\r\n  render() {\r\n    return(\r\n      <Navbar color=\"dark\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\" className=\"text-light\">\r\n          {this.props.titulo}\r\n        </NavbarBrand>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <Carro/>\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\nexport default Navegacion;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Producto from './components/Producto';\r\nimport Navegacion from './components/Navegacion'\r\nimport {Container, Row} from 'reactstrap';\r\nimport './App.css';\r\nimport {listaProductos} from './listaProductos.json'\r\n\r\nclass App extends React.Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tlistaProductos\r\n\t\t};\r\n\t}\r\n\trender(){\r\n\t\tconst arregloComponentes = this.state.listaProductos.map(\r\n\t\t\t(listaProductos, i) => {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<Producto\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\ttitulo={listaProductos.titulo}\r\n\t\t\t\t\t\timagen={listaProductos.imagen}\r\n\t\t\t\t\t\tdescripcion={listaProductos.descripcion}\r\n\t\t\t\t\t\tprecio={listaProductos.precio}\r\n\t\t\t\t\t\tstock={listaProductos.stock}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Navegacion titulo=\"Mi primer sitio de compras en React\"/>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t{arregloComponentes}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}